Linux - Emacs/Emacspeak and Braille implementation for latex-access

Daniel Dalton <daniel.dalton10@gmail.com>

ABOUT: 

Implement latex-access under gnu/emacs, so it is usable with emacs under
Linux.

The basic structure: 
* The latex-access functionality can be toggled with c-x \ 
* Normal behaviour takes place if latex-access is disabled. 
* Line navigation functions voice the line in question through the
latex-access translation. This means all line movement (with the arrows,
c-p, c-n, and c-e up/down in emacspeak all voice the line with the
latex-access translation.) c-u (prefix arguments are supported)
* The Braille display is updated as you type, or as the point is
moved.
* Speech is spoken via emacspeak, and Braille translation is provided in
the echo area.
* An autohook exists to load this functionality automatically if we are
visiting a LaTeX file. 
(of course you can toggle the functionality when desired though with c-x
\ or m-x toggle-latex-access. There are also latex-access-on and
latex-access-off functions.)
* Toggle of Brailling dollar signs in nemeth Braille translation (m-x toggle-latex-access-dollars-braille)
* Toggle of speaking dollar signs. (m-x toggle-latex-access-dollars-speech)
* Support for the preprocessor functions 

INSTALLATION:

I have built an installation script titled "setup.py found in the emacs
branch of this svn checkout (the same directory as this README.)

Invoking with no arguments will install to ~/.emacs, otherwise if you know
what your doing and use an init file somewhere else, feel free to invoke
the script as follows:
python setup.py <path-to-init-file>

Most users who are happy with the default (~/.emacs), may just invoke
the script as follows:
python setup.py 

You may as well say yes to the prompt (y), to byte-compile
emacs-latex-access... This should improve the speed slightly. If it
fails or you do not want to byte compile the script can handle this
fine. (It modifies your init file according to whether it could
byte-compile or not.)

Then copy and paste the export PYTHONPATH= line generated by the script
to your ~/.bash_profile file, or equivalent. Ensure the PYTHONPATH
variable is set before emacs is started.

Having done this, you may skip to step 2 (installing pymacs).

1. This step only needs to be done if you wish to install manually,
otherwise if you used the provided script, please skip to step 2.

Add the following to ~/.emacs. Change /path/to/svnroot to the actual
path to your svn local checkout. Eg. the directory containing the bulk
of the *.py files and the general readme.txt file.
Below lines should be appended to your .emacs.
; Emacs latex-access:
(setq latex-access-path "/path/to/svnroot")
(load (concat latex-access-path "/emacs/emacs-latex-access.el"))
(add-hook 'LaTeX-mode-hook 'latex-access-on) ; turn on when visiting a
; buffer in latex-mode 
; End emacs Latex-access.

Note: Keep this structure if you wish to have the uninstall script work
with this installation.

If you wish to use a byte-compiled file, for improved speed, replace .el
with .elc in the line:
(load (concat latex-access-path "/emacs/emacs-latex-access.el"))

To byte-compile the emacs-latex-access.el file, do:
emacs -batch -f batch-byte-compile emacs-latex-access.py
(From this directory, the emacs branch of the svn checkout)

2. Please install pymacs. 
On debian/ubuntu you may do:
sudo apt-get install pymacs 
Otherwise follow the instructions provided at:
http://pymacs.progiciels-bpi.ca/

3. Restart emacs!
Now emacs should communicate correctly with latex-access.

GENERAL NOTES:

If emacspeak is not present, you'll need to edit the lisp code and
comment out all the references to any emacspeak specific
functions/variables to avoid errors. Future plans are to make this
easier
to disable perhaps by setting a variable.

If Braille is absent, then possibly consider commenting out Braille to avoid annoying symbols appearing in the echo area:

HOW TO USE:

Using any form of line navigation including emacspeak commands will
speak the line in question as a latex-access translation. Braille is
updated in the echo area as you type or move. 
To see the Braille translation constantly without the display jumping
back to the LaTeX source, turn off cursor tracking in BRLTTY.

Editing works as usual, just edit the LaTeX source, and of course cursor
routing works on the LaTeX source text. As you edit the echo area will
be updated with a Braille translation.

A hook also exists loading the functionality whenever you visit a
LaTeX file.

c-x \ toggles latex-access for any buffer locally. 

You can call most of the latex-access- functions interactively through
m-x. Consistant key bindings will be introduced. 

* toggle dollars use toggle-latex-access-dollars-speech or
  toggle-latex-access-dollars-braille.
* The preprocessor functions are under latex-access-preprocessor-* --
  use tab completion to find out what functions are available.

UNINSTALL:

Run 
python uninstall_latex_access.py 
If your installation is in ~/.emacs.

Or if it is elsewhere, invoke the script like this:
python uninstall_latex_access.py <path-to-init-file>

MANUAL REMOVAL: 

You only need to do this if you don't use the provided uninstall script.

Remove/comment the latex-access code from .emacs. Once this is done, the
files in svn will no longer be called or used by emacs. Hence, all
latex-access functionality will be removed from emacs. It is then safe
to remove the checked out svn directory if you wish. 

You can of course remove the export PYTHONPATH line from your
.bash_profile if you wish, though leaving it will do no harm.

Last Updated: 16 December 2010 by Daniel Dalton

